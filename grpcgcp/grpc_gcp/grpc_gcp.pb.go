// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_gcp.proto

package grpc_gcp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AffinityConfig_Command int32

const (
	// The annotated method will be required to be bound to an existing session
	// to execute the RPC. The corresponding <affinity_key_field_path> will be
	// used to find the affinity key from the request message.
	AffinityConfig_BOUND AffinityConfig_Command = 0
	// The annotated method will establish the channel affinity with the
	// channel which is used to execute the RPC. The corresponding
	// <affinity_key_field_path> will be used to find the affinity key from the
	// response message.
	AffinityConfig_BIND AffinityConfig_Command = 1
	// The annotated method will remove the channel affinity with the
	// channel which is used to execute the RPC. The corresponding
	// <affinity_key_field_path> will be used to find the affinity key from the
	// request message.
	AffinityConfig_UNBIND AffinityConfig_Command = 2
)

var AffinityConfig_Command_name = map[int32]string{
	0: "BOUND",
	1: "BIND",
	2: "UNBIND",
}
var AffinityConfig_Command_value = map[string]int32{
	"BOUND":  0,
	"BIND":   1,
	"UNBIND": 2,
}

func (x AffinityConfig_Command) String() string {
	return proto.EnumName(AffinityConfig_Command_name, int32(x))
}
func (AffinityConfig_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_grpc_gcp_82dc4b4d7fb469b1, []int{3, 0}
}

type ApiConfig struct {
	// The channel pool configurations.
	ChannelPool *ChannelPoolConfig `protobuf:"bytes,2,opt,name=channel_pool,json=channelPool,proto3" json:"channel_pool,omitempty"`
	// The method configurations.
	Method               []*MethodConfig `protobuf:"bytes,1001,rep,name=method,proto3" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ApiConfig) Reset()         { *m = ApiConfig{} }
func (m *ApiConfig) String() string { return proto.CompactTextString(m) }
func (*ApiConfig) ProtoMessage()    {}
func (*ApiConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_gcp_82dc4b4d7fb469b1, []int{0}
}
func (m *ApiConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiConfig.Unmarshal(m, b)
}
func (m *ApiConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiConfig.Marshal(b, m, deterministic)
}
func (dst *ApiConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiConfig.Merge(dst, src)
}
func (m *ApiConfig) XXX_Size() int {
	return xxx_messageInfo_ApiConfig.Size(m)
}
func (m *ApiConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ApiConfig proto.InternalMessageInfo

func (m *ApiConfig) GetChannelPool() *ChannelPoolConfig {
	if m != nil {
		return m.ChannelPool
	}
	return nil
}

func (m *ApiConfig) GetMethod() []*MethodConfig {
	if m != nil {
		return m.Method
	}
	return nil
}

// ChannelPoolConfig are options for configuring the channel pool.
// RPCs will be scheduled onto existing channels in the pool until all channels
// have <max_concurrent_streams_low_watermark> number of streams. At this point
// a new channel is spun out. Once <max_size> channels have been spun out and
// each has <max_concurrent_streams_low_watermark> streams, subsequent RPCs will
// hang until any of the in-flight RPCs is finished, freeing up a channel.
type ChannelPoolConfig struct {
	// The max number of channels in the pool.
	// Default value is 0, meaning 'unlimited' size.
	MaxSize uint32 `protobuf:"varint,1,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// The idle timeout (seconds) of channels without bound affinity sessions.
	IdleTimeout uint64 `protobuf:"varint,2,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	// The low watermark of max number of concurrent streams in a channel.
	// New channel will be created once it get hit, until we reach the max size of the channel pool.
	// Default value is 100. The valid range is [1, 100]. Any value outside the range will be ignored and the default value will be used.
	// Note: It is not recommended that users adjust this value, since a single channel should generally have no trouble managing the default (maximum) number of streams.
	MaxConcurrentStreamsLowWatermark uint32   `protobuf:"varint,3,opt,name=max_concurrent_streams_low_watermark,json=maxConcurrentStreamsLowWatermark,proto3" json:"max_concurrent_streams_low_watermark,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *ChannelPoolConfig) Reset()         { *m = ChannelPoolConfig{} }
func (m *ChannelPoolConfig) String() string { return proto.CompactTextString(m) }
func (*ChannelPoolConfig) ProtoMessage()    {}
func (*ChannelPoolConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_gcp_82dc4b4d7fb469b1, []int{1}
}
func (m *ChannelPoolConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelPoolConfig.Unmarshal(m, b)
}
func (m *ChannelPoolConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelPoolConfig.Marshal(b, m, deterministic)
}
func (dst *ChannelPoolConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelPoolConfig.Merge(dst, src)
}
func (m *ChannelPoolConfig) XXX_Size() int {
	return xxx_messageInfo_ChannelPoolConfig.Size(m)
}
func (m *ChannelPoolConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelPoolConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelPoolConfig proto.InternalMessageInfo

func (m *ChannelPoolConfig) GetMaxSize() uint32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

func (m *ChannelPoolConfig) GetIdleTimeout() uint64 {
	if m != nil {
		return m.IdleTimeout
	}
	return 0
}

func (m *ChannelPoolConfig) GetMaxConcurrentStreamsLowWatermark() uint32 {
	if m != nil {
		return m.MaxConcurrentStreamsLowWatermark
	}
	return 0
}

type MethodConfig struct {
	// A fully qualified name of a gRPC method, or a wildcard pattern ending
	// with .*, such as foo.bar.A, foo.bar.*. Method configs are evaluated
	// sequentially, and the first one takes precedence.
	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	// The channel affinity configurations.
	Affinity             *AffinityConfig `protobuf:"bytes,1001,opt,name=affinity,proto3" json:"affinity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MethodConfig) Reset()         { *m = MethodConfig{} }
func (m *MethodConfig) String() string { return proto.CompactTextString(m) }
func (*MethodConfig) ProtoMessage()    {}
func (*MethodConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_gcp_82dc4b4d7fb469b1, []int{2}
}
func (m *MethodConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MethodConfig.Unmarshal(m, b)
}
func (m *MethodConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MethodConfig.Marshal(b, m, deterministic)
}
func (dst *MethodConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MethodConfig.Merge(dst, src)
}
func (m *MethodConfig) XXX_Size() int {
	return xxx_messageInfo_MethodConfig.Size(m)
}
func (m *MethodConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MethodConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MethodConfig proto.InternalMessageInfo

func (m *MethodConfig) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *MethodConfig) GetAffinity() *AffinityConfig {
	if m != nil {
		return m.Affinity
	}
	return nil
}

type AffinityConfig struct {
	// The affinity command applies on the selected gRPC methods.
	Command AffinityConfig_Command `protobuf:"varint,2,opt,name=command,proto3,enum=grpc.gcp.AffinityConfig_Command" json:"command,omitempty"`
	// The field path of the affinity key in the request/response message.
	// For example: "f.a", "f.b.d", etc.
	AffinityKey          string   `protobuf:"bytes,3,opt,name=affinity_key,json=affinityKey,proto3" json:"affinity_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AffinityConfig) Reset()         { *m = AffinityConfig{} }
func (m *AffinityConfig) String() string { return proto.CompactTextString(m) }
func (*AffinityConfig) ProtoMessage()    {}
func (*AffinityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_gcp_82dc4b4d7fb469b1, []int{3}
}
func (m *AffinityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffinityConfig.Unmarshal(m, b)
}
func (m *AffinityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffinityConfig.Marshal(b, m, deterministic)
}
func (dst *AffinityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffinityConfig.Merge(dst, src)
}
func (m *AffinityConfig) XXX_Size() int {
	return xxx_messageInfo_AffinityConfig.Size(m)
}
func (m *AffinityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AffinityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AffinityConfig proto.InternalMessageInfo

func (m *AffinityConfig) GetCommand() AffinityConfig_Command {
	if m != nil {
		return m.Command
	}
	return AffinityConfig_BOUND
}

func (m *AffinityConfig) GetAffinityKey() string {
	if m != nil {
		return m.AffinityKey
	}
	return ""
}

func init() {
	proto.RegisterType((*ApiConfig)(nil), "grpc.gcp.ApiConfig")
	proto.RegisterType((*ChannelPoolConfig)(nil), "grpc.gcp.ChannelPoolConfig")
	proto.RegisterType((*MethodConfig)(nil), "grpc.gcp.MethodConfig")
	proto.RegisterType((*AffinityConfig)(nil), "grpc.gcp.AffinityConfig")
	proto.RegisterEnum("grpc.gcp.AffinityConfig_Command", AffinityConfig_Command_name, AffinityConfig_Command_value)
}

func init() { proto.RegisterFile("grpc_gcp.proto", fileDescriptor_grpc_gcp_82dc4b4d7fb469b1) }

var fileDescriptor_grpc_gcp_82dc4b4d7fb469b1 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4d, 0xeb, 0xd3, 0x30,
	0x18, 0xb7, 0xdb, 0x5c, 0xdb, 0xa7, 0x73, 0xcc, 0x1c, 0xa4, 0xe2, 0xa5, 0x16, 0x0f, 0xc5, 0x43,
	0x85, 0x89, 0x17, 0x0f, 0xc2, 0xd6, 0x5d, 0x44, 0xad, 0xd2, 0x39, 0xc4, 0x53, 0x88, 0x59, 0xd6,
	0x85, 0x35, 0x49, 0xe9, 0x32, 0xf6, 0x82, 0xdf, 0xc4, 0x93, 0x1f, 0xcf, 0x6f, 0x21, 0x4d, 0xdb,
	0x4d, 0xf9, 0xf3, 0xbf, 0x3d, 0xf9, 0xbd, 0xf1, 0xfc, 0x1e, 0x02, 0xe3, 0xbc, 0x2a, 0x29, 0xce,
	0x69, 0x19, 0x97, 0x95, 0xd2, 0x0a, 0x39, 0xf5, 0x3b, 0xce, 0x69, 0x19, 0xfe, 0x04, 0x77, 0x56,
	0xf2, 0x44, 0xc9, 0x0d, 0xcf, 0xd1, 0x3b, 0x18, 0xd1, 0x2d, 0x91, 0x92, 0x15, 0xb8, 0x54, 0xaa,
	0xf0, 0x7b, 0x81, 0x15, 0x79, 0xd3, 0x67, 0x71, 0xa7, 0x8e, 0x93, 0x86, 0xfd, 0xa2, 0x54, 0xd1,
	0x58, 0x32, 0x8f, 0xde, 0x20, 0xf4, 0x0a, 0x86, 0x82, 0xe9, 0xad, 0x5a, 0xfb, 0x7f, 0xec, 0xa0,
	0x1f, 0x79, 0xd3, 0x27, 0x37, 0xeb, 0x27, 0x43, 0xb4, 0xae, 0x56, 0x16, 0xfe, 0xb6, 0xe0, 0xf1,
	0x9d, 0x4c, 0xf4, 0x14, 0x1c, 0x41, 0x4e, 0x78, 0xcf, 0x2f, 0xcc, 0xb7, 0x02, 0x2b, 0x7a, 0x94,
	0xd9, 0x82, 0x9c, 0x96, 0xfc, 0xc2, 0xd0, 0x73, 0x18, 0xf1, 0x75, 0xc1, 0xb0, 0xe6, 0x82, 0xa9,
	0x83, 0x36, 0x1b, 0x0e, 0x32, 0xaf, 0xc6, 0xbe, 0x36, 0x10, 0x4a, 0xe1, 0x45, 0xed, 0xa6, 0x4a,
	0xd2, 0x43, 0x55, 0x31, 0xa9, 0xf1, 0x5e, 0x57, 0x8c, 0x88, 0x3d, 0x2e, 0xd4, 0x11, 0x1f, 0x89,
	0x66, 0x95, 0x20, 0xd5, 0xce, 0xef, 0x9b, 0xe4, 0x40, 0x90, 0x53, 0x72, 0x95, 0x2e, 0x1b, 0xe5,
	0x47, 0x75, 0xfc, 0xd6, 0xe9, 0xc2, 0xef, 0x30, 0xfa, 0x77, 0x77, 0x84, 0x60, 0x20, 0x89, 0xa8,
	0x37, 0xeb, 0x47, 0x6e, 0x66, 0x66, 0xf4, 0x06, 0x1c, 0xb2, 0xd9, 0x70, 0xc9, 0xf5, 0xb9, 0xae,
	0x5e, 0x5f, 0xcd, 0xbf, 0x55, 0x9f, 0xb5, 0x54, 0x5b, 0xfe, 0x2a, 0x0d, 0x7f, 0x59, 0x30, 0xfe,
	0x9f, 0x44, 0x6f, 0xc1, 0xa6, 0x4a, 0x08, 0x22, 0xd7, 0xa6, 0xdb, 0x78, 0x1a, 0xdc, 0x97, 0x13,
	0x27, 0x8d, 0x2e, 0xeb, 0x0c, 0xf5, 0x71, 0xba, 0x68, 0xbc, 0x63, 0x67, 0xd3, 0xd0, 0xcd, 0xbc,
	0x0e, 0xfb, 0xc0, 0xce, 0xe1, 0x4b, 0xb0, 0x5b, 0x1b, 0x72, 0xe1, 0xe1, 0xfc, 0xf3, 0x2a, 0x5d,
	0x4c, 0x1e, 0x20, 0x07, 0x06, 0xf3, 0xf7, 0xe9, 0x62, 0x62, 0x21, 0x80, 0xe1, 0x2a, 0x35, 0x73,
	0xef, 0xc7, 0xd0, 0xfc, 0x95, 0xd7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x42, 0x0e, 0x3f,
	0x3d, 0x02, 0x00, 0x00,
}
